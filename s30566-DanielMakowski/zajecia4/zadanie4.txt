#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_BUFFER_SIZE 1024

int main(int argc, char *argv[]) {
	FILE *plik = NULL;
	char buffer[MAX_BUFFER_SIZE];
	int elements;
	int i;
	int *liczby;
	char nazwa_pliku[MAX_BUFFER_SIZE];

	/*otwieranie pliku*/
	if (argc != 2){
		printf("Podaj nazwe pliku: ");
		if (fgets(nazwa_pliku, MAX_BUFFER_SIZE, stdin) == NULL) {
			printf("Błąd przy wczytywaniu nazwy pliku\n");
			return 1;
		}
		nazwa_pliku[strcspn(nazwa_pliku, "\n")] = '\0';
		plik = fopen(nazwa_pliku, "r");
		if (plik == NULL) {
			printf("Nie można otworzyć pliku %s\n", nazwa_pliku);
			return 1;
									        }
	}
	else {
		plik = fopen(argv[1], "r");
		if (plik == NULL) {
			printf("Nie mozna otworzyc pliku %s\n", argv[1]);
			return 1;
		}
	}

	/*wczytanie liczby elementow*/
	if (fgets(buffer, MAX_BUFFER_SIZE, plik) == NULL) {
		printf("Blad przy wczytywaniu liczby elementow\n");
		if (plik != stdin) fclose(plik);
		return 1;
		}
	if (sscanf(buffer, "%d", &elements) != 1) {
		printf("Blad przy konwersji liczby elementow\n");
		if (plik != stdin) fclose (plik);
		return 1;
	}
	
	/*alokacja pamieci*/
	liczby = (int *)malloc(elements * sizeof(int));
	if (liczby == NULL) {
		printf("Nie udalo sie zaalokowac pamieci\n");
		if (plik != stdin) fclose(plik);
		return 1;
	}

	/*wczytywanie liczb*/
	for (i = 0; i < elements; i++){
		if (fgets(buffer, MAX_BUFFER_SIZE, plik) == NULL) {
			printf("Blad przy konwersji liczby\n");
			free (liczby);
			if (plik != stdin) fclose(plik);
			return 1;
		}

		if(sscanf(buffer, "%d", &liczby[i]) != 1) {
			printf("Blad przy konwersji liczby \n");
			free(liczby);
			if (plik != stdin) fclose(plik);
			return 1;
		}
	}

	if (plik != stdin) fclose(plik);

	printf("Liczby w odwrotnej kolejnosci:\n");
	for (i = elements - 1; i >= 0; i--){
		printf("%d\n", liczby[i]);
	}

	free(liczby);

	return 0;
}
